# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013, Ujaval Gandhi
# This file is distributed under the same license as the QGIS Tutorials and Tips package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: QGIS Tutorials\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-11-27 23:46+0530\n"
"PO-Revision-Date: 2014-07-31 07:02+0000\n"
"Last-Translator: Ujaval Gandhi <ujaval@gmail.com>\n"
"Language-Team: English (http://www.transifex.com/projects/p/qgis-tutorials/language/en/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: en\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# 26f169cb2d0d47a2b1465bb397542a4f
#: ../../source/docs/getting_started_with_pyqgis.rst:2
msgid "Getting Started With Python Programming"
msgstr "Getting Started With Python Programming"

# 3bcdad7cbf1a4ef793c2004adfbfc97b
#: ../../source/docs/getting_started_with_pyqgis.rst:8
msgid ""
"QGIS has a powerful programming interface that allows you to extend the core"
" functionality of the software as well as write scripts to automate your "
"tasks. QGIS supports the popular Python scripting language. Even if you are "
"a beginner, learning a little bit of Python and QGIS programming interface "
"will allow you to be much more productive in your work. This tutorial "
"assumes no prior programming knowledge and is intended to give an "
"introduction to python scripting in QGIS (PyQGIS)."
msgstr "QGIS has a powerful programming interface that allows you to extend the core functionality of the software as well as write scripts to automate your tasks. QGIS supports the popular Python scripting language. Even if you are a beginner, learning a little bit of Python and QGIS programming interface will allow you to be much more productive in your work. This tutorial assumes no prior programming knowledge and is intended to give an introduction to python scripting in QGIS (PyQGIS)."

# 773df117f97f4563851468e654638959
#: ../../source/docs/getting_started_with_pyqgis.rst:18
msgid "Overview of the task"
msgstr "Overview of the task"

# e883194b0d04495f8cddcc0f188dbee8
#: ../../source/docs/getting_started_with_pyqgis.rst:20
msgid ""
"We will load a vector point layer representing all major airports and use "
"python scripting to create a text file with the airport name, airport code, "
"latitude and longitude for each of the airport in the layer."
msgstr "We will load a vector point layer representing all major airports and use python scripting to create a text file with the airport name, airport code, latitude and longitude for each of the airport in the layer."

# 0824052c0490438ea199904a994e3fdd
#: ../../source/docs/getting_started_with_pyqgis.rst:25
msgid "Get the data"
msgstr "Get the data"

# 6c1071ef720a4981b42efbd237dd2a52
#: ../../source/docs/getting_started_with_pyqgis.rst:27
msgid ""
"We will use the `Airports <http://www.naturalearthdata.com/downloads/10m-"
"cultural-vectors/airports/>`_ dataset from Natural Earth."
msgstr "We will use the `Airports <http://www.naturalearthdata.com/downloads/10m-cultural-vectors/airports/>`_ dataset from Natural Earth."

# 700f933cc7eb494284a2cc0bd082d340
#: ../../source/docs/getting_started_with_pyqgis.rst:31
msgid ""
"Download the `Airports shapefile "
"<http://www.naturalearthdata.com/http//www.naturalearthdata.com/download/10m/cultural/ne_10m_airports.zip>`_."
msgstr "Download the `Airports shapefile <http://www.naturalearthdata.com/http//www.naturalearthdata.com/download/10m/cultural/ne_10m_airports.zip>`_."

# e351f95a3016473a9183d44494ac6958
#: ../../source/docs/getting_started_with_pyqgis.rst:34
msgid "Data Source [NATURALEARTH]_"
msgstr "Data Source [NATURALEARTH]_"

# 411eebe1c1c24cca8b6a4016a749db59
#: ../../source/docs/getting_started_with_pyqgis.rst:37
msgid "Procedure"
msgstr "Procedure"

# c42120f80c1d4fe3b3532f8dcadd4faa
#: ../../source/docs/getting_started_with_pyqgis.rst:39
msgid ""
"In QGIS, go to :menuselection:`Layers --> Add Vector Layer`. Browse to the "
"downloaded ``ne_10m_airports.zip`` file and click :guilabel:`Open`. Select "
"the ``ne_10m_airports.shp`` layer and click :guilabel:`OK`."
msgstr "In QGIS, go to :menuselection:`Layers --> Add Vector Layer`. Browse to the downloaded ``ne_10m_airports.zip`` file and click :guilabel:`Open`. Select the ``ne_10m_airports.shp`` layer and click :guilabel:`OK`."

# 3a2256f744bf4562a6dd50aa0846807c
#: ../../source/docs/getting_started_with_pyqgis.rst:46
msgid "You will see the ``ne_10m_airports`` layer loaded in QGIS."
msgstr "You will see the ``ne_10m_airports`` layer loaded in QGIS."

# 1673d47419884b06abca7e839d0ca959
#: ../../source/docs/getting_started_with_pyqgis.rst:51
msgid ""
"Select the :guilabel:`Identify` tool and click on any of the points to "
"examine the available attributes. You will see that the name of the airport "
"and it's 3 digit code are contained in the attributes ``name`` and "
"``iata_code`` respectively."
msgstr "Select the :guilabel:`Identify` tool and click on any of the points to examine the available attributes. You will see that the name of the airport and it's 3 digit code are contained in the attributes ``name`` and ``iata_code`` respectively."

# 873ab2a468e748f8be9ce8d77f463957
#: ../../source/docs/getting_started_with_pyqgis.rst:59
msgid ""
"QGIS provides a built-in console where you can type python commands and get "
"the result. This console is a great way to learn scripting and also to do "
"quick data processing. Open the :guilabel:`Python Console` by going to "
":menuselection:`Plugins --> Python Console`."
msgstr "QGIS provides a built-in console where you can type python commands and get the result. This console is a great way to learn scripting and also to do quick data processing. Open the :guilabel:`Python Console` by going to :menuselection:`Plugins --> Python Console`."

# 344cd5e9ed514d4ca5f9db84d2526af0
#: ../../source/docs/getting_started_with_pyqgis.rst:67
msgid ""
"You will see a new panel open at the bottom of QGIS canvas. You will see a "
"prompt like ``>>>`` at the bottom where you can type commands. For "
"interacting with the QGIS environment, we must use the ``iface`` variable. "
"To access the currently active layer in QGIS, you can type the following and"
" press :kbd:`Enter`. This command fetches the reference to the currently "
"loaded layer and stores it in the ``layer`` variable."
msgstr "You will see a new panel open at the bottom of QGIS canvas. You will see a prompt like ``>>>`` at the bottom where you can type commands. For interacting with the QGIS environment, we must use the ``iface`` variable. To access the currently active layer in QGIS, you can type the following and press :kbd:`Enter`. This command fetches the reference to the currently loaded layer and stores it in the ``layer`` variable."

# a6ba9d4f3a264f7594dcb417be156e5c
#: ../../source/docs/getting_started_with_pyqgis.rst:81
msgid ""
"There is a handy function called ``dir()`` in python that shows you all "
"available methods for any object. This is useful when you are not sure what "
"functions are available for the object. Run the following command to see "
"what operations we can do on the ``layer`` variable."
msgstr "There is a handy function called ``dir()`` in python that shows you all available methods for any object. This is useful when you are not sure what functions are available for the object. Run the following command to see what operations we can do on the ``layer`` variable."

# 01695384680b43cab252521c8ddbfe31
#: ../../source/docs/getting_started_with_pyqgis.rst:93
msgid ""
"You will see a long list of available functions. For now, we will use a "
"function called ``getFeatures()`` which will gets you the reference to all "
"features of a layer. In our case, each feature will be a point representing "
"an airport. You can type the following command to iterate through each of "
"the features in the current layer. Make sure to add 2 spaces before typing "
"the second line."
msgstr "You will see a long list of available functions. For now, we will use a function called ``getFeatures()`` which will gets you the reference to all features of a layer. In our case, each feature will be a point representing an airport. You can type the following command to iterate through each of the features in the current layer. Make sure to add 2 spaces before typing the second line."

# f0216a8296f443d3a10ebd48909a6a32
#: ../../source/docs/getting_started_with_pyqgis.rst:108
msgid ""
"As you will see in the output, each line contains a reference to a feature "
"within the layer. The reference to the feature is stored in the ``f`` "
"variable. We can use the ``f`` variable to access the attributes of each "
"feature. Type the following to print the ``name`` and ``iata_code`` for each"
" airport feature."
msgstr "As you will see in the output, each line contains a reference to a feature within the layer. The reference to the feature is stored in the ``f`` variable. We can use the ``f`` variable to access the attributes of each feature. Type the following to print the ``name`` and ``iata_code`` for each airport feature."

# bb8cb73fd4d8478196b72d97100e19eb
#: ../../source/docs/getting_started_with_pyqgis.rst:122
msgid ""
"So now you know how to programatically access the attribute of each feature "
"in a layer. Now, let's see how we can access the coordinates of the feature."
" The coordinates of a vector feature can be accessed by calling the "
"``geometry()`` function. This function returns a geometry object that we can"
" store in the variable ``geom``. You can run ``asPoint()`` function on the "
"geometry object to get the x and y coordinates of the point. If your feature"
" is a line or a polygon, you can use ``asPolyline()`` or ``asPolygon()`` "
"functions. Type the following code at the prompt and press :kbd:`Enter` to "
"see the x and y coordinates of each feature."
msgstr "So now you know how to programatically access the attribute of each feature in a layer. Now, let's see how we can access the coordinates of the feature. The coordinates of a vector feature can be accessed by calling the ``geometry()`` function. This function returns a geometry object that we can store in the variable ``geom``. You can run ``asPoint()`` function on the geometry object to get the x and y coordinates of the point. If your feature is a line or a polygon, you can use ``asPolyline()`` or ``asPolygon()`` functions. Type the following code at the prompt and press :kbd:`Enter` to see the x and y coordinates of each feature."

# 79e97cb7b46f4cbcb6c4975f1eb52b4f
#: ../../source/docs/getting_started_with_pyqgis.rst:141
msgid ""
"What if we wanted to get only the ``x`` cordinate of the feature? You can "
"call the ``x()`` function on the point object and get its x coordinate."
msgstr "What if we wanted to get only the ``x`` cordinate of the feature? You can call the ``x()`` function on the point object and get its x coordinate."

# 6830cae989564287a4c9256e10bed87c
#: ../../source/docs/getting_started_with_pyqgis.rst:153
msgid ""
"Now we have all the pieces that we can stitch together to generate our "
"desired output. Type the following code to print the name, iata_code, "
"latitude and longitude of each of the airport features. The ``%s`` and "
"``%f`` notations are ways to format a string and number variables."
msgstr "Now we have all the pieces that we can stitch together to generate our desired output. Type the following code to print the name, iata_code, latitude and longitude of each of the airport features. The ``%s`` and ``%f`` notations are ways to format a string and number variables."

# 7a04972866e9475cb2911f47134e54df
#: ../../source/docs/getting_started_with_pyqgis.rst:168
msgid ""
"You can see the output printed on the console. A more useful way to store "
"the output would be in a file. You can type the following code to create a "
"file and write the output there. Replace the file path with a path on your "
"own system. Note that we add ``\\n`` at the end of our line formatting. This"
" is to add a newline after we add the data for each feature. You should also"
" note the ``unicode_line = line.encode('utf-8')`` line. Since our layer "
"contains some features with unicode characters, we can't simply write it to "
"a text file. We encode the text using the UTF-8 encoding and then write to "
"the text file."
msgstr "You can see the output printed on the console. A more useful way to store the output would be in a file. You can type the following code to create a file and write the output there. Replace the file path with a path on your own system. Note that we add ``\\n`` at the end of our line formatting. This is to add a newline after we add the data for each feature. You should also note the ``unicode_line = line.encode('utf-8')`` line. Since our layer contains some features with unicode characters, we can't simply write it to a text file. We encode the text using the UTF-8 encoding and then write to the text file."

# 8c44fa6f339e468faf55a1bd8527082e
#: ../../source/docs/getting_started_with_pyqgis.rst:192
msgid ""
"You can go to the output file location you specified and open the text file."
" You will see the data from the airports shapefile that we extracted using "
"python scripting."
msgstr "You can go to the output file location you specified and open the text file. You will see the data from the airports shapefile that we extracted using python scripting."
