# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013, Ujaval Gandhi
# This file is distributed under the same license as the QGIS Tutorials and Tips package.
# 
# Translators:
# Sorin Călinică <scalinica@gmail.com>, 2014
msgid ""
msgstr ""
"Project-Id-Version: QGIS Tutorials\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-07-15 21:46+0530\n"
"PO-Revision-Date: 2014-07-15 17:23+0000\n"
"Last-Translator: Sorin Călinică <scalinica@gmail.com>\n"
"Language-Team: Romanian (http://www.transifex.com/projects/p/qgis-tutorials/language/ro/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ro\n"
"Plural-Forms: nplurals=3; plural=(n==1?0:(((n%100>19)||((n%100==0)&&(n!=0)))?2:1));\n"

# e3cfdde24ced40d6b8a5265b68346e4c
#: ../../source/docs/getting_started_with_pyqgis.rst:2
msgid "Getting Started With Python Programming"
msgstr "Noțiuni de bază despre programarea în Python "

# 6fcdb499a004461387f7436fb14b7992
#: ../../source/docs/getting_started_with_pyqgis.rst:8
msgid ""
"QGIS has a powerful programming interface that allows you to extend the core"
" functionality of the software as well as write scripts to automate your "
"tasks. QGIS supports the popular Python scripting language. Even if you are "
"a beginner, learning a little bit of Python and QGIS programming interface "
"will allow you to be much more productive in your work. This tutorial "
"assumes no prior programming knowledge and is intended to give an "
"introduction to python scripting in QGIS (PyQGIS)."
msgstr "QGIS are o interfață de programare puternică, care vă îngăduie să extindeți funcționalitatea de bază a aplicației, precum și să scrieți script-uri pentru a automatiza sarcinile. QGIS suportă  limbajul popular de scripting Python. Chiar dacă sunteți un începător, învățarea unor noțiuni despre Python și desprer interfața de programare a QGIS va permite să fiți mult mai productivi în munca dvs. Acest tutorial nu necesită cunoștințe de programare prealabile, având scopul de a oferi o introducere în scriptarea Python în cadrul QGIS (PyQGIS)."

# 7651791223ee46729af4690dc6562e3a
#: ../../source/docs/getting_started_with_pyqgis.rst:18
msgid "Overview of the task"
msgstr "Privire de ansamblu asupra activității"

# 9a5b4e85524640ceb0ec5b491e94603f
#: ../../source/docs/getting_started_with_pyqgis.rst:20
msgid ""
"We will load a vector point layer representing all major airports and use "
"python scripting to create a text file with the airport name, airport code, "
"latitude and longitude for each of the airport in the layer."
msgstr "Vom încărca un strat vectorial de tip punct, reprezentând toate aeroporturile majore, folosind scriptarea Python pentru a crea un fișier text cu numele, codul, latitudinea și longitudinea pentru fiecare dintre aeroporturile stratului."

# 288012bc1abd4801ba5dc6542b0e8980
#: ../../source/docs/getting_started_with_pyqgis.rst:25
msgid "Get the data"
msgstr "Obținerea datelor"

# b89d40e6331f43c69e776e4446b5376e
#: ../../source/docs/getting_started_with_pyqgis.rst:27
msgid ""
"We will use the `Airports <http://www.naturalearthdata.com/downloads/10m-"
"cultural-vectors/airports/>`_ dataset from Natural Earth."
msgstr "Vom folosi setul de date `Airports <http://www.naturalearthdata.com/downloads/10m-cultural-vectors/airports/>`_ de la Natural Earth."

# 5614e5e384514ecd9319eca71f7a600e
#: ../../source/docs/getting_started_with_pyqgis.rst:31
msgid ""
"Download the `Airports shapefile "
"<http://www.naturalearthdata.com/http//www.naturalearthdata.com/download/10m/cultural/ne_10m_airports.zip>`_."
msgstr "Decărcați `Fișierul shape de Aeroporturi <http://www.naturalearthdata.com/http//www.naturalearthdata.com/download/10m/cultural/ne_10m_airports.zip>`_."

# f40a351167af4fb7a7d6dcacdef7a69d
#: ../../source/docs/getting_started_with_pyqgis.rst:34
msgid "Data Source [NATURALEARTH]_"
msgstr "Sursa de date [NATURALEARTH]_"

# fbb9fcb45b574cfc8a295a248b1e8332
#: ../../source/docs/getting_started_with_pyqgis.rst:37
msgid "Procedure"
msgstr "Procedura"

# 774b5b4c07c8481780243dfb0f5f464e
#: ../../source/docs/getting_started_with_pyqgis.rst:39
msgid ""
"In QGIS, go to :menuselection:`Layers --> Add Vector Layer`. Browse to the "
"downloaded ``ne_10m_airports.zip`` file and click :guilabel:`Open`. Select "
"the ``ne_10m_airports.shp`` layer and click :guilabel:`OK`."
msgstr "În QGIS, mergeți la :menuselection:`Layers --> Add Vector Layer`. Navigați la fișierul descărcat ``ne_10m_airports.zip`` și faceți clic pe :guilabel:`Open`. Selectați stratul ``ne_10m_airports.shp`` și faceți clic pe :guilabel:`OK`."

# 57e564f6100d4d54a1ba41ff249e679c
#: ../../source/docs/getting_started_with_pyqgis.rst:46
msgid "You will see the ``ne_10m_airports`` layer loaded in QGIS."
msgstr "Veți vedea stratul ``ne_10m_airports`` încărcat în QGIS."

# ef71db6f22c34c14bdcb526c16eadac8
#: ../../source/docs/getting_started_with_pyqgis.rst:51
msgid ""
"Select the :guilabel:`Identify` tool and click on any of the points to "
"examine the available attributes. You will see that the name of the airport "
"and it's 3 digit code are contained in the attributes ``name`` and "
"``iata_code`` respectively."
msgstr "Selectați instrumentul :guilabel:`Identify` și faceți clic pe oricare dintre puncte pentru a examina atributele disponibile. Veți vedea că numele aeroportului și codul de 3 cifre al acestuia sunt conținute în atributele ``name`` și respectiv ``iata_code``."

# fbaad887cfd94f01a0dd354742c634c2
#: ../../source/docs/getting_started_with_pyqgis.rst:59
msgid ""
"QGIS provides a built-in console where you can type python commands and get "
"the result. This console is a great way to learn scripting and also to do "
"quick data processing. Open the :guilabel:`Python Console` by going to "
":menuselection:`Plugins --> Python Console`."
msgstr "QGIS oferă o consolă încorporată în care puteți introduce comenzi Python și să obțineți rezultatul. Această consolă este o modalitate foarte bună de a învăța scriptarea și, de asemenea, de a procesa datele rapid. Deschideți :guilabel:`Python Console` din :menuselection:`Plugins --> Python Console`."

# cda83ab91eda4cef87b6aebfcb7cd961
#: ../../source/docs/getting_started_with_pyqgis.rst:67
msgid ""
"You will see a new panel open at the bottom of QGIS canvas. You will see a "
"prompt like ``>>>`` at the bottom where you can type commands. For "
"interacting with the QGIS environment, we must use the ``iface`` variable. "
"To access the currently active layer in QGIS, you can type the following and"
" press :kbd:`Enter`. This command fetches the reference to the currently "
"loaded layer and stores it in the ``layer`` variable."
msgstr "Veți vedea un nou panou, deschis în partea de jos a suportului de hărți al QGIS. Veți vedea un prompt cum ar fi ``>>>``, unde aveți posibilitatea să tastați comenzi. Interacționa cu mediul QGIS, se face folosind variabila ``iface``. Pentru a accesa stratul din QGIS, activ în mod curent, aveți posibilitatea să tastați următoarele, apoi să apăsați :kbd:`Enter`. Această comandă obține referința către stratul încărcat și o stochează în variabila ``layer``."

# abe50d310d9d47dfa878f2a120ae8f85
#: ../../source/docs/getting_started_with_pyqgis.rst:81
msgid ""
"There is a handy function called ``dir()`` in python that shows you all "
"available methods for any object. This is useful when you are not sure what "
"functions are available for the object. Run the following command to see "
"what operations we can do on the ``layer`` variable."
msgstr "Există în Python o funcție utilă, numită ``dir()``, care vă arată toate metodele disponibile pentru orice obiect. Acest lucru este folositor atunci când nu știți precis care funcții sunt disponibile pentru un anumit obiect. Executați următoarea comandă pentru a vedea ce operații putem executa cu variabila ``layer``."

# 6b130444d62549b38cf7a47ec49a2887
#: ../../source/docs/getting_started_with_pyqgis.rst:93
msgid ""
"You will see a long list of available functions. For now, we will use a "
"function called ``getFeatures()`` which will gets you the reference to all "
"features of a layer. In our case, each feature will be a point representing "
"an airport. You can type the following command to iterate through each of "
"the features in the current layer. Make sure to add 2 spaces before typing "
"the second line."
msgstr "Veți vedea o listă lungă de funcții disponibile. Pentru moment, vom folosi o funcție numită ``getFeatures()``, care va obține referința către toate entitățile unui strat. În cazul nostru, fiecare entitate va fi un punct, care reprezintă un aeroport. Puteți tasta următoarea comandă, pentru a parcurge fiecare dintre entitățile din stratul curent. Asigurați-vă că ați adăugat 2 spații, înainte de a introduce a doua linie."

# 07075391cba04c5eae4cbe142e149b37
#: ../../source/docs/getting_started_with_pyqgis.rst:108
msgid ""
"As you will see in the output, each line contains a reference to a feature "
"within the layer. The reference to the feature is stored in the ``f`` "
"variable. We can use the ``f`` variable to access the attributes of each "
"feature. Type the following to print the ``name`` and ``iata_code`` for each"
" airport feature."
msgstr "După cum veți vedea în ieșire, fiecare linie conține o referire la o entitate din cadrul stratului. Referința către entitate este stocată în variabila ``f```. Putem folosi variabila ``f``` pentru a accesa atributele fiecărei entități. Introduceți următoarele pentru a imprima ``name`` și ``iata_code`` pentru fiecare entitate de tip aeroport."

# 0f10457acc6049e0acc67b0257a096fd
#: ../../source/docs/getting_started_with_pyqgis.rst:122
msgid ""
"So now you know how to programatically access the attribute of each feature "
"in a layer. Now, let's see how we can access the coordinates of the feature."
" The coordinates of a vector feature can be accessed by calling the "
"``geometry()`` function. This function returns a geometry object that we can"
" store in the variable ``geom``. You can run ``asPoint()`` function on the "
"geometry object to get the x and y coordinates of the point. If your feature"
" is a line or a polygon, you can use ``asPolyline()`` or ``asPolygon()`` "
"functions. Type the folloing code at the prompt and press :kbd:`Enter` to "
"see the x and y coordinates of each feature."
msgstr "Deci, acum știți cum să accesați programatic atributul fiecărei entități dintr-un strat. Acum, să vedem cum putem accesa coordonatele entităților. Coordonatele unei entități vectoriale pot fi accesate prin apelarea funcției ``geometry()``. Această funcție returnează un obiect de tip geometrie pe care îl putem stoca în variabila ``geom``. Puteți rula funcția ``asPoint()`` pe obiectul respectiv pentru a obține coordonatele x și y ale punctului. În cazul în care entitatea este o linie sau un poligon, puteți folosi funcțiile ``asPolyline()`` sau ``asPolygon()``. Introduceți următorul cod în  prompt și apăsați :kbd:`Enter`, pentru a vedea coordonatele x și y ale fiecărei entități."

# 8aaf8f24ef454339ad34f4e373de1cf2
#: ../../source/docs/getting_started_with_pyqgis.rst:141
msgid ""
"What if we wanted to get only the ``x`` cordinate of the feature? You can "
"call the ``x()`` function on the point object and get its x coordinate."
msgstr "Ce se întâmplă dacă vrem să obținem numai coordonata ``x`` a entității? Puteți apela funcția ``x()`` pe obiectul punct, pentru a-i obține coordonata x."

# c46d6b55d0734a919ba10f008deb73e1
#: ../../source/docs/getting_started_with_pyqgis.rst:153
msgid ""
"Now we have all the pieces that we can stitch together to generate our "
"desired output. Type the following code to print the name, iata_code, "
"latitude and longitude of each of the airport features. The ``%s`` and "
"``%f`` notations are ways to format a string and number variables."
msgstr "Acum avem toate piesele, pe care le putem îmbina pentru a genera rezultatul dorit. Introduceți codul de mai jos pentru a imprima numele, iata_code, latitudinea și longitudinea fiecărei dintre entitățile aeroport. Notațiile ``%s`` and ``%f`` sunt moduri de a formata șirurile și variabilele numerice."

# f9cba9245d454550a270389b8ed63a1a
#: ../../source/docs/getting_started_with_pyqgis.rst:168
msgid ""
"You can see the output printed on the console. A more useful way to store "
"the output would be in a file. You can type the following code to create a "
"file and write the output there. Replace the file path with a path on your "
"own system. Note that we add ``\\n`` at the end of our line formatting. This"
" is to add a newline after we add the data for each feature. You should also"
" note the ``unicode_line = line.encode('utf-8')`` line. Since our layer "
"contains some features with unicode characters, we can't simply write it to "
"a text file. We encode the text using the UTF-8 encoding and then write to "
"the text file."
msgstr "Puteți vedea rezultatul afișat în consolă. Un mod mai util de a stoca rezultatul ar fi un fișier. Puteți tasta codul de mai jos pentru a crea un fișier, și să scrieți rezultatul acolo. Înlocuiți calea fișierului cu cea de pe sistemul propriu. Rețineți că vom adăuga ``\\n`` în încheierea formatării liniei noastre. Acest lucru va adăuga o linie nouă, după ce vom adăuga datele pentru fiecare entitate. De asemenea, trebuie să rețineți linia ``unicode_line = line.encode('utf-8')``. Deoarece stratul nostru conține unele entități cu caractere Unicode, nu putem face o simplă scriere într-un fișier text. Vom codifica textul folosind codificarea UTF-8 și apoi îl vom scrie în fișierul text."

# a6497292d1a148ad946b96a4271708ee
#: ../../source/docs/getting_started_with_pyqgis.rst:192
msgid ""
"You can go to the output file location you specified and open the text file."
" You will see the data from the airports shapefile that we extracted using "
"python scripting."
msgstr "Puteți merge la locația fișierului de ieșire specificat și deschideți fișierul text. Veți vedea datele din fișierul shape de aeroporturi, pe care l-am extras folosind scriptarea Python."
